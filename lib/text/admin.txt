import "package:cloud_firestore/cloud_firestore.dart";
import "package:flutter/material.dart";
import "package:flutter_svg/flutter_svg.dart";

class UserData {
  final String? firstname;
  final String? lastname;
  final int? age;
  final String? email;

  UserData({
    this.firstname,
    this.lastname,
    this.age,
    this.email,
  });

  factory UserData.fromFirestore(
    DocumentSnapshot<Map<String, dynamic>> snapshot,
    SnapshotOptions? options,
  ) {
    final data = snapshot.data();
    return UserData(
      firstname: data?['first name'],
      lastname: data?['last name'],
      age: data?['age'],
      email: data?['email'],
    );
  }

  Map<String, dynamic> toFirestore() {
    return {
      if (firstname != null) "first name": firstname,
      if (lastname != null) "last name": lastname,
      if (age != null) "age": age,
      if (email != null) "email": email,
    };
  }
}

final db = FirebaseFirestore.instance;
final users = db.collection('users');

// void getData() {
//   users.get().then(
//     (querySnapshot) {
//       print("Successfully completed");
//       for (var docSnapshot in querySnapshot.docs) {
//         print('${docSnapshot.id} => ${docSnapshot.data()}');
//       }
//     },
//     onError: (e) => print("Error completing: $e"),
//   );
// }

class UserScreen extends StatefulWidget {
  const UserScreen({Key? key}) : super(key: key);

  @override
  State<UserScreen> createState() => _UserScreenState();
}

class _UserScreenState extends State<UserScreen> {
  List<UserData> userDataList = [];
  
  void getData() {
    users.get().then(
      (querySnapshot) {
        final List<UserData> data = [];
        for (var docSnapshot in querySnapshot.docs) {
          final userData = UserData.fromFirestore(docSnapshot, null);
          data.add(userData);
        }
        setState(() {
          userDataList = data;
        });
      },
      onError: (e) => print("Error completing: $e"),
    );
  }

  @override
  void initState() {
    super.initState();
    getData();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.grey[300],
        title: const Text(
          'User',
          style: TextStyle(color: Colors.black),
        ),
      ),
      body: Center(
        child: Column(
          children: [
            const SizedBox(height: 30),
            SizedBox(
              height: 115,
              width: 115,
              child: Stack(
                fit: StackFit.expand,
                children: [
                  const CircleAvatar(
                    backgroundImage: AssetImage('lib/assets/profile_img.jpg'),
                  ),
                  Positioned(
                    bottom: 0,
                    right: 0,
                    child: DecoratedBox(
                      decoration: BoxDecoration(
                        border: Border.all(color: Colors.grey),
                        borderRadius: BorderRadius.circular(12),
                      ),
                      child: SizedBox(
                        height: 35,
                        width: 35,
                        child: TextButton(
                          onPressed: () {},
                          child: SvgPicture.asset('lib/assets/camera.svg',
                              colorFilter: const ColorFilter.mode(
                                Colors.grey,
                                BlendMode.srcIn,
                              )),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
            const SizedBox(height: 20),
            Expanded(
              child: ListView.builder(
                itemCount: userDataList.length,
                itemBuilder: (BuildContext context, int index) {
                  final userData = userDataList[index];
                  return Column(
                    children: [
                      const SizedBox(height: 20),
                      Text(
                        "First Name: ${userData.firstname}",
                        style: const TextStyle(
                          fontSize: 16,
                          color: Colors.grey,
                        ),
                      ),
                      const SizedBox(height: 10),
                      Text(
                        "Last Name: ${userData.lastname}",
                        style: const TextStyle(
                          fontSize: 16,
                          color: Colors.grey,
                        ),
                      ),
                      const SizedBox(height: 10),
                      Text(
                        "Age: ${userData.age}",
                        style: const TextStyle(
                          fontSize: 16,
                          color: Colors.grey,
                        ),
                      ),
                      const SizedBox(height: 10),
                      Text(
                        "Email: ${userData.email}",
                        style: const TextStyle(
                          fontSize: 16,
                          color: Colors.grey,
                        ),
                      ),
                      const SizedBox(height: 20),
                      const Divider(),
                    ],
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}














